<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dev on Linux blog</title>
    <link>https://danielkraic.github.io/tags/dev/</link>
    <description>Recent content in Dev on Linux blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 13 Sep 2016 13:46:10 +0200</lastBuildDate>
    <atom:link href="https://danielkraic.github.io/tags/dev/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>MongoDB</title>
      <link>https://danielkraic.github.io/2016/09/13/mongodb/</link>
      <pubDate>Tue, 13 Sep 2016 13:46:10 +0200</pubDate>
      
      <guid>https://danielkraic.github.io/2016/09/13/mongodb/</guid>
      <description>

&lt;h1 id=&#34;mongodb&#34;&gt;MongoDB&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;help

show dbs
show collections
show users
show roles
show profile
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;use &amp;lt;db&amp;gt;

coll = db.&amp;lt;collection&amp;gt;
coll.find();
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;operators&#34;&gt;operators&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;$eq, $gt, $gte, $lt, $lte, $ne, $in, $nin&lt;/li&gt;
&lt;li&gt;$and, $or, $not, $nor&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;find&#34;&gt;find&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;db.restaurants.find()
db.restaurants.findOne()
db.restaurants.find( { &amp;quot;grades.grade&amp;quot;: &amp;quot;B&amp;quot; } )
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;db.users.find( { name: null } )
db.users.find( { name : { $exists: false } } )
db.users.find( { name : { $type: 10 } } )
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;db.restaurants.find( { &amp;quot;grades.score&amp;quot;: { $gt: 30 } } )
db.restaurants.find( { &amp;quot;grades.score&amp;quot;: { $lt: 10 } } )
//and
db.restaurants.find( { &amp;quot;cuisine&amp;quot;: &amp;quot;Italian&amp;quot;, &amp;quot;address.zipcode&amp;quot;: &amp;quot;10075&amp;quot; } )
//or
db.restaurants.find(
   { $or: [ { &amp;quot;cuisine&amp;quot;: &amp;quot;Italian&amp;quot; }, { &amp;quot;address.zipcode&amp;quot;: &amp;quot;10075&amp;quot; } ] }
)
db.users.find( { status: { $in: [ &amp;quot;P&amp;quot;, &amp;quot;D&amp;quot; ] } } )
db.users.find( { status: &amp;quot;A&amp;quot;, age: { $lt: 30 } } )
db.users.find(
   {
     status: &amp;quot;A&amp;quot;,
     $or: [ { age: { $lt: 30 } }, { type: 1 } ]
   }
)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;query-embedded-document&#34;&gt;query embedded document&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;db.users.find( { &amp;quot;favorites.artist&amp;quot;: &amp;quot;Picasso&amp;quot; } )
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;query-array&#34;&gt;query array&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;//exact match
db.users.find( { badges: [ &amp;quot;blue&amp;quot;, &amp;quot;black&amp;quot; ] } )
//match array element
db.users.find( { badges: &amp;quot;black&amp;quot; } )
//match specific array element
db.users.find( { &amp;quot;badges.0&amp;quot;: &amp;quot;black&amp;quot; } )
//Multiple Criteria for Array Elements
db.users.find( { finished: { $elemMatch: { $gt: 15, $lt: 20 } } } )
// Array of Embedded Documents
db.users.find( { &#39;points.0.points&#39;: { $lte: 55 } } )
db.users.find( { &#39;points.points&#39;: { $lte: 55 } } )
db.users.find( { points: { $elemMatch: { points: { $lte: 70 }, bonus: 20 } } } )
db.users.find( { &amp;quot;points.points&amp;quot;: { $lte: 70 }, &amp;quot;points.bonus&amp;quot;: 20 } )
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;sort&#34;&gt;sort&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;db.restaurants.find().sort( { name: 1 } );
db.restaurants.find().sort( { name: -1 } );
db.restaurants.find().sort( { &amp;quot;borough&amp;quot;: 1, &amp;quot;address.zipcode&amp;quot;: 1 } )
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;projection&#34;&gt;projection&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;db.restaurants.find({}, { name:true, restaurant_id:true} )
db.users.find( { status: &amp;quot;A&amp;quot; }, { name: 1, status: 1, _id: 0 } )
// return fields of embedded doc
db.users.find(
   { status: &amp;quot;A&amp;quot; },
   { name: 1, status: 1, &amp;quot;favorites.food&amp;quot;: 1 }
)
// return all but excluded
db.users.find( { status: &amp;quot;A&amp;quot; }, { favorites: 0, points: 0 } )
// return  Specific Array Elements
db.users.find( { status: &amp;quot;A&amp;quot; }, { name: 1, status: 1, points: { $slice: -1 } } )
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;limit&#34;&gt;limit&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;db.restaurants.find().limit(1)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;skip&#34;&gt;skip&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;db.restaurants.find().limit(10)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;insert&#34;&gt;insert&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;db.users.insertOne(
   {
      name: &amp;quot;sue&amp;quot;,
      age: 19,
      status: &amp;quot;P&amp;quot;
   }
)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;db.users.insertMany(
   [
     { name: &amp;quot;bob&amp;quot;, age: 42, status: &amp;quot;A&amp;quot;, },
     { name: &amp;quot;ahn&amp;quot;, age: 22, status: &amp;quot;A&amp;quot;, },
     { name: &amp;quot;xi&amp;quot;, age: 34, status: &amp;quot;D&amp;quot;, }
   ]
)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;// insert single doc
db.users.insert(
   {
      name: &amp;quot;sue&amp;quot;,
      age: 19,
      status: &amp;quot;P&amp;quot;
   }
)

// insert multiple docs
db.users.insert(
   [
     { name: &amp;quot;bob&amp;quot;, age: 42, status: &amp;quot;A&amp;quot;, },
     { name: &amp;quot;ahn&amp;quot;, age: 22, status: &amp;quot;A&amp;quot;, },
     { name: &amp;quot;xi&amp;quot;, age: 34, status: &amp;quot;D&amp;quot;, }
   ]
)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;update&#34;&gt;update&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{ upsert : true}&lt;/code&gt; - update or insert new&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{ multi : true}&lt;/code&gt; - update multiple dics&lt;/li&gt;
&lt;li&gt;updateOne&lt;/li&gt;
&lt;li&gt;updateMany&lt;/li&gt;
&lt;li&gt;replaceOne/update&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;update-operators&#34;&gt;update operators&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;$inc, $mul, $rename, $setOrInsert, $set, $unset, $min, $max, $currentDate&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;db.restaurants.update(
    { &amp;quot;name&amp;quot; : &amp;quot;Juni&amp;quot; },
    {
      $set: { &amp;quot;cuisine&amp;quot;: &amp;quot;American (New)&amp;quot; },
      $currentDate: { &amp;quot;lastModified&amp;quot;: true }
    }
)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;db.restaurants.update(
  { &amp;quot;restaurant_id&amp;quot; : &amp;quot;41156888&amp;quot; },
  { $set: { &amp;quot;address.street&amp;quot;: &amp;quot;East 31st Street&amp;quot; } }
)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;update-multiple-docs&#34;&gt;update multiple docs&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;db.restaurants.update(
  { &amp;quot;address.zipcode&amp;quot;: &amp;quot;10016&amp;quot;, cuisine: &amp;quot;Other&amp;quot; },
  {
    $set: { cuisine: &amp;quot;Category To Be Determined&amp;quot; },
    $currentDate: { &amp;quot;lastModified&amp;quot;: true }
  },
  { multi: true}
)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;update-array&#34;&gt;update array&lt;/h3&gt;

&lt;h4 id=&#34;elemmatch&#34;&gt;$elemMatch&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;db.students.update(
   {
     _id: 4,
     grades: { $elemMatch: { grade: { $lte: 90 }, mean: { $gt: 80 } } }
   },
   { $set: { &amp;quot;grades.$.std&amp;quot; : 6 } }
)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;placeholder&#34;&gt;placeholder $&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;// positional $ operator acts as a placeholder for the first match of the update query
db.students.update(
   { _id: 1, grades: 80 },
   { $set: { &amp;quot;grades.$&amp;quot; : 82 } }
)
db.students.update(
   { _id: 4, &amp;quot;grades.grade&amp;quot;: 85 },
   { $set: { &amp;quot;grades.$.std&amp;quot; : 6 } }
)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;addtoset&#34;&gt;$addToSet&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;db.users.update(
  { letters : { $exists: true } },
  { $addToSet: { letters: &amp;quot;g&amp;quot; } }
)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;each&#34;&gt;$each&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;db.users.update(
  { letters : { $exists: true } },
  { $addToSet: { letters: { $each:[&amp;quot;f&amp;quot;,&amp;quot;e&amp;quot;] } } }
)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;replace-doc&#34;&gt;replace doc&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;db.restaurants.update(
   { &amp;quot;restaurant_id&amp;quot; : &amp;quot;41704620&amp;quot; },
   {
     &amp;quot;name&amp;quot; : &amp;quot;Vella 2&amp;quot;,
     &amp;quot;address&amp;quot; : {
              &amp;quot;coord&amp;quot; : [ -73.9557413, 40.7720266 ],
              &amp;quot;building&amp;quot; : &amp;quot;1480&amp;quot;,
              &amp;quot;street&amp;quot; : &amp;quot;2 Avenue&amp;quot;,
              &amp;quot;zipcode&amp;quot; : &amp;quot;10075&amp;quot;
     }
   }
)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;remove&#34;&gt;remove&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;db.restaurants.remove( { &amp;quot;borough&amp;quot;: &amp;quot;Manhattan&amp;quot; } )
db.restaurants.remove( { &amp;quot;borough&amp;quot;: &amp;quot;Queens&amp;quot; }, { justOne: true } )
//remove all docs
db.restaurants.remove( { } )
//drop collection
db.restaurants.drop()
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;aggregate&#34;&gt;aggregate&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;db.restaurants.aggregate(
   [
     { $group: { &amp;quot;_id&amp;quot;: &amp;quot;$borough&amp;quot;, &amp;quot;count&amp;quot;: { $sum: 1 } } }
   ]
);
db.restaurants.aggregate(
   [
     { $match: { &amp;quot;borough&amp;quot;: &amp;quot;Queens&amp;quot;, &amp;quot;cuisine&amp;quot;: &amp;quot;Brazilian&amp;quot; } },
     { $group: { &amp;quot;_id&amp;quot;: &amp;quot;$address.zipcode&amp;quot; , &amp;quot;count&amp;quot;: { $sum: 1 } } }
   ]
);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>CPP variant</title>
      <link>https://danielkraic.github.io/2016/05/27/cpp-variant/</link>
      <pubDate>Fri, 27 May 2016 10:34:00 +0200</pubDate>
      
      <guid>https://danielkraic.github.io/2016/05/27/cpp-variant/</guid>
      <description>

&lt;h1 id=&#34;variants&#34;&gt;Variants&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;resembles union&lt;/li&gt;
&lt;li&gt;able to store values of different types in a boost::variant variable&lt;/li&gt;
&lt;li&gt;at any point only one value can be stored&lt;/li&gt;
&lt;li&gt;When a new value is assigned, the old value is overwritten&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;boost::variant&amp;lt;double, char, std::string&amp;gt; v;
v = 3.14;
std::cout &amp;lt;&amp;lt; boost::get&amp;lt;double&amp;gt;(v) &amp;lt;&amp;lt; &#39;\n&#39;;
v = &#39;A&#39;;
std::cout &amp;lt;&amp;lt; boost::get&amp;lt;char&amp;gt;(v) &amp;lt;&amp;lt; &#39;\n&#39;;
v = &amp;quot;Boost&amp;quot;;
std::cout &amp;lt;&amp;lt; boost::get&amp;lt;std::string&amp;gt;(v) &amp;lt;&amp;lt; &#39;\n&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;motivation&#34;&gt;Motivation&lt;/h2&gt;

&lt;h3 id=&#34;example-1&#34;&gt;Example 1&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;before&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;class PersonId {
public:
  std::string getName();
  int getJohnDoeId();
  // etc.
private:
  bool m_hasName;
  std::string m_name;
  int m_johnDoeId;
};
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;after&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;using PersonId = variant&amp;lt;std::string, int&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;example-2&#34;&gt;Example 2&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;before&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;struct command {
  enum type { SET_SCORE, FIRE_MISSILE, FIRE_LASER, ROTATE };
  virtual type getType();
};
struct set_score : commmand {
  type getType() { return SET_SCORE; } override final;
  double value;
};
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;after&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;struct set_score {
  double value;
};
using command = variant&amp;lt;set_score, fire_missile, fire_laser, rotate&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;timeline&#34;&gt;Timeline&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;2004 - Boost.Variant released in Boost 1.31.0.&lt;/li&gt;
&lt;li&gt;2016 - std::variant recommended for C++17 by LEWG.&lt;/li&gt;
&lt;li&gt;2020 - Language-based variants in C++20?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;boost-variant&#34;&gt;boost::variant&lt;/h2&gt;

&lt;h4 id=&#34;creation-and-assignment&#34;&gt;Creation and Assignment&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// Default constructs to first alternative.
boost::variant&amp;lt;std::string, int&amp;gt; v;
// Assignment to alternative types.
v = 3;
v = &amp;quot;Hello World&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;extract-a-value-with-get&#34;&gt;Extract a Value with get&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;void output(const boost::variant&amp;lt;std::string, int&amp;gt;&amp;amp; v)
{
  if(std::string const * const s = boost::get&amp;lt;std::string&amp;gt;(&amp;amp;v))
    std::cout &amp;lt;&amp;lt; &amp;quot;I got a string: &amp;quot; &amp;lt;&amp;lt; *s &amp;lt;&amp;lt; std:endl;
  else
    std::cout &amp;lt;&amp;lt; &amp;quot;I got an int: &amp;quot; &amp;lt;&amp;lt; boost::get&amp;lt;int&amp;gt;(v) &amp;lt;&amp;lt; std:endl;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;extract-a-value-with-a-visitor&#34;&gt;Extract a Value with a visitor&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;struct OutputVisitor
{
  using result_type = void;
  void operator()(const std::string&amp;amp; s) const {
    std::cout &amp;lt;&amp;lt; &amp;quot;I got a string: &amp;quot; &amp;lt;&amp;lt; s &amp;lt;&amp;lt; std:endl;
  }
  void operator()(const int i) const {
    std::cout &amp;lt;&amp;lt; &amp;quot;I got an int: &amp;quot; &amp;lt;&amp;lt; i &amp;lt;&amp;lt; std:endl;
  }
};
void output(const boost::variant&amp;lt;std::string, int&amp;gt;&amp;amp; v)
{
  boost::apply_visitor(OutputVisitor(), v);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;std-variant&#34;&gt;std::variant&lt;/h2&gt;

&lt;h4 id=&#34;change-1-apply-visitor-renamed&#34;&gt;Change 1: apply_visitor renamed&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;struct OutputVisitor
{
  void operator()(const std::string&amp;amp; s) const {
    std::cout &amp;lt;&amp;lt; &amp;quot;I got a string: &amp;quot; &amp;lt;&amp;lt; s &amp;lt;&amp;lt; std:endl;
  }
  void operator()(const int i) const {
    std::cout &amp;lt;&amp;lt; &amp;quot;I got an int: &amp;quot; &amp;lt;&amp;lt; i &amp;lt;&amp;lt; std:endl;
  }
};
void output(const std::variant&amp;lt;std::string, int&amp;gt;&amp;amp; v)
{
  std::visit(OutputVisitor(), v);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;void output(const std::variant&amp;lt;std::string, int&amp;gt;&amp;amp; v)
{
  return std::visit(
    std::overload(
      [](const std::string &amp;amp; s) {  
        std::cout &amp;lt;&amp;lt; &amp;quot;I got a string: &amp;quot; &amp;lt;&amp;lt; s &amp;lt;&amp;lt; std:endl;
      },
      [](const int i) {  
        std::cout &amp;lt;&amp;lt; &amp;quot;I got an int: &amp;quot; &amp;lt;&amp;lt; i &amp;lt;&amp;lt; std:endl;
      } ),
    v );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;change-2-get-reworked&#34;&gt;Change 2: get reworked&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;void output(const std::variant&amp;lt;std::string, int&amp;gt;&amp;amp; v)
{
  if(std::string const * const s = std::get_if&amp;lt;std::string&amp;gt;(&amp;amp;v))
    std::cout &amp;lt;&amp;lt; &amp;quot;I got a string: &amp;quot; &amp;lt;&amp;lt; *s &amp;lt;&amp;lt; std:endl;
  else
    std::cout &amp;lt;&amp;lt; &amp;quot;I got an int: &amp;quot; &amp;lt;&amp;lt; std::get&amp;lt;int&amp;gt;(v) &amp;lt;&amp;lt; std:endl;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;change-3-index-based-access&#34;&gt;Change 3: index-based access.&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;void output(const std::variant&amp;lt;std::string, int&amp;gt;&amp;amp; v)
{
  if(std::string const * const s = std::get_if&amp;lt;0&amp;gt;(&amp;amp;v))
    std::cout &amp;lt;&amp;lt; &amp;quot;I got a string: &amp;quot; &amp;lt;&amp;lt; *s &amp;lt;&amp;lt; std:endl;
  else
    std::cout &amp;lt;&amp;lt; &amp;quot;I got an int: &amp;quot; &amp;lt;&amp;lt; std::get&amp;lt;1&amp;gt;(v) &amp;lt;&amp;lt; std:endl;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;language-support-for-variant&#34;&gt;Language support for variant.&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;lvariant command {
  std::size_t    set_score;    // Set the score to value.
  std::monostate fire_missile; // Fire a missile.
  unsigned       fire_laser;   // Fire a laser with the specified
                               // intensity.
  double         rotate;       // Rotate the ship by the specified
                               // degrees.
};
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;lvariant json_value {
  std::map&amp;lt;std::string, json_value&amp;gt; object;
  std::vector&amp;lt;json_value&amp;gt; array;
  std::string string;
  double number;
  bool boolean;
  std::monostate null_;
};
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;creation-of-alternatives&#34;&gt;Creation of Alternatives&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// Create a new command &#39;cmd&#39; that sets the score to &#39;10&#39;.
command cmd = command::set_score( 10 );
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;basic-pattern-matching&#34;&gt;Basic Pattern Matching&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;// Output a human readable string corresponding to the specified &#39;cmd&#39;
// command to the specified &#39;stream&#39;.
std::ostream&amp;amp; operator&amp;lt;&amp;lt;( std::ostream&amp;amp; stream, const command cmd ) {
  inspect( cmd ) {
    set_score value =&amp;gt;
      stream &amp;lt;&amp;lt; &amp;quot;Set the score to &amp;quot; &amp;lt;&amp;lt; value &amp;lt;&amp;lt; &amp;quot;.\n&amp;quot;;
    fire_missile m =&amp;gt;
      stream &amp;lt;&amp;lt; &amp;quot;Fire a missile.\n&amp;quot;;
    fire_laser intensity =&amp;gt;
      stream &amp;lt;&amp;lt; &amp;quot;Fire a laser with &amp;quot; &amp;lt;&amp;lt; intensity &amp;lt;&amp;lt; &amp;quot; intensity.\n&amp;quot;;
    rotate degrees =&amp;gt;:
      stream &amp;lt;&amp;lt; &amp;quot;Rotate by &amp;quot; &amp;lt;&amp;lt; degrees &amp;lt;&amp;lt; &amp;quot; degrees.\n&amp;quot;;
  }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Boost DI</title>
      <link>https://danielkraic.github.io/2016/05/27/boost-di/</link>
      <pubDate>Fri, 27 May 2016 10:33:23 +0200</pubDate>
      
      <guid>https://danielkraic.github.io/2016/05/27/boost-di/</guid>
      <description>

&lt;h1 id=&#34;boost-di&#34;&gt;Boost::DI&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;C++14 header only Dependency Injection library with no dependencies&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;dependency-injection-di&#34;&gt;Dependency Injection (DI)&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;involves passing (injecting) one or more dependencies (or services) to a dependent object (or client) which become part of the client’s state.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;

&lt;h3 id=&#34;no-dependency-injection&#34;&gt;No dependency injection&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;class coffee_maker {
public:
  // create dependencies in the constructor
  coffee_maker()
  : heater(std::make_shared&amp;lt;electric_heater&amp;gt;())
  , pump(std::make_unique&amp;lt;heat_pump&amp;gt;(heater))
  { }
  void brew() {
    heater-&amp;gt;on();
    pump-&amp;gt;pump();
  }
private:
  std::shared_ptr&amp;lt;iheater&amp;gt; heater;
  std::unique_ptr&amp;lt;ipump&amp;gt; pump;
};
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;dependency-injection&#34;&gt;Dependency injection&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;class coffee_maker {
public:
  // inject dependencies via constructor
  coffee_maker(std::shared_ptr&amp;lt;iheater&amp;gt; heater, std::unique_ptr&amp;lt;ipump&amp;gt; pump)
  : heater(heater), pump(std::move(pump))
  { }
  void brew() {
    heater-&amp;gt;on();
    pump-&amp;gt;pump();
  }
private:
  std::shared_ptr&amp;lt;iheater&amp;gt; heater;
  std::unique_ptr&amp;lt;ipump&amp;gt; pump;
};
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;motivation&#34;&gt;Motivation&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;DI provides loosely coupled code (separation of business logic and object creation)&lt;/li&gt;
&lt;li&gt;DI provides easier to maintain code (different objects might be easily injected)&lt;/li&gt;
&lt;li&gt;DI provides easier to test code (fakes objects might be injected)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;

&lt;h4 id=&#34;example-1&#34;&gt;Example 1&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;app&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;struct renderer { int device; };
class iview {
public:
virtual ~iview() = default;
virtual void update() = 0;
};
class model {};
class controller {
public:
controller(model&amp;amp;, view&amp;amp;) {}
};
class user {};
class app {
public:
app(controller&amp;amp;, user&amp;amp;) {}
};
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;usual approach to create app&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;renderer renderer_;
view view_{&amp;quot;title&amp;quot;, renderer_};
model model_;
controller controller_{model_, view_};
user user_;
app app_{controller_, user_};
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;create app with boost::di&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;auto app = di::make_injector().create&amp;lt;app&amp;gt;();
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;example-2&#34;&gt;Example 2&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;class controller;

struct renderer {
  int device;
};

class view {
 public:
  view(std::string /*title*/, const renderer&amp;amp;) {}
};

class model {};
class user {};

class app {
 public:
  app(controller&amp;amp;, user&amp;amp;) {}
};

/// CREATE OBJECTS TREE
class controller {
 public:
  controller(model&amp;amp;, view&amp;amp;) {}
};
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;int main() {
  /// NO DEPENDENCY INJECTION
  {
    renderer renderer_;
    view view_{&amp;quot;&amp;quot;, renderer_};
    model model_;
    controller controller_{model_, view_};
    user user_;
    app app_{controller_, user_};
    (void)app_;
  }

  /// DEPENDENCY INJECTION
  {
    auto injector = di::make_injector();
    auto app_ = injector.create&amp;lt;app&amp;gt;();
    (void)app_;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;/// CHANGE CONTROLLER CONSTRUCTOR ORDER
class controller {
 public:
  controller(view&amp;amp;, model&amp;amp;) {}
};

int main() {
  /// NO DEPENDENCY INJECTION
  {
  renderer renderer_;
  view view_{&amp;quot;&amp;quot;, renderer_};
  model model_;
  //controller controller_{model_, view_};
  controller controller_{view_, model_}; /// CHANGE
  user user_;
  app app_{controller_, user_};
  (void)app_;
  }

  /// DEPENDENCY INJECTION
  {
  auto injector = di::make_injector();
  auto app_ = injector.create&amp;lt;app&amp;gt;();
  (void)app_;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;/// ADD A NEW DEPENDENCY TO CONTROLLER
struct configuration {};
class controller {
 public:
  controller(view&amp;amp;, model&amp;amp;, configuration) {}
};

int main() {
  /// NO DEPENDENCY INJECTION
  {
  renderer renderer_;
  view view_{&amp;quot;&amp;quot;, renderer_};
  model model_;
  //controller controller_{model_, view_};
  controller controller_{view_, model_, configuration{}}; /// CHANGE
  user user_;
  app app_{controller_, user_};
  (void)app_;
  }

  /// DEPENDENCY INJECTION
  {
  auto injector = di::make_injector();
  auto app_ = injector.create&amp;lt;app&amp;gt;();
  (void)app_;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;bindings&#34;&gt;Bindings&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;interfaces&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;class iview {
public:
  virtual ~iview() noexcept = default;
  virtual void update() =0;
};

class gui_view: public iview {
public:
  gui_view(std::string title, const renderer&amp;amp;) {}
  void update() override {}
};

class text_view: public iview {
public:
  void update() override {}
};

auto injector = di::make_injector(
  di::bind&amp;lt;iview&amp;gt;.to&amp;lt;gui_view&amp;gt;() // bind interface to implementation
);
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;struct T { // create using uniform initialization
  int&amp;amp; a;  // might be used to serialize
  double b;
};

auto i = 42;
auto injector = di::make_injector(
  di::bind&amp;lt;int&amp;gt;.to(i),
  di::bind&amp;lt;double&amp;gt;.to(87.0)
);
injector.create&amp;lt;T&amp;gt;(); // will create T{i, 87.0};
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;auto use_gui_view = true/false;

auto injector = di::make_injector(
  di::bind&amp;lt;iview&amp;gt;.to([&amp;amp;](const auto&amp;amp; injector) -&amp;gt; iview&amp;amp; {
    return use_gui_view ?
      injector.template create&amp;lt;gui_view&amp;amp;&amp;gt;() :
      injector.template create&amp;lt;text_view&amp;amp;&amp;gt;();
  })
);

use_gui_view = true;
assert(dynamic_cast&amp;lt;gui_view*&amp;gt;(
  injector.create&amp;lt;std::unique_ptr&amp;lt;iview&amp;gt;().get())
);

use_gui_view = false;
assert(dynamic_cast&amp;lt;text_view*&amp;gt;(
  injector.create&amp;lt;std::unique_ptr&amp;lt;iview&amp;gt;().get())
);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>GDB</title>
      <link>https://danielkraic.github.io/2016/05/24/gdb/</link>
      <pubDate>Tue, 24 May 2016 10:30:00 +0200</pubDate>
      
      <guid>https://danielkraic.github.io/2016/05/24/gdb/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.root.cz/clanky/trasovani-a-ladeni-nativnich-aplikaci-v-linuxu-pouziti-gdb-a-jeho-nadstaveb/&#34;&gt;http://www.root.cz/clanky/trasovani-a-ladeni-nativnich-aplikaci-v-linuxu-pouziti-gdb-a-jeho-nadstaveb/&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gdb program
gdb program core
gdb program 1234

help

q

shell date
!date

set logging on
set logging off
set logging file file # default logfile is gdb.txt.

info program
info functions
info sources
info sharedlibrary

list
list main
list 1,12

search regex
reverse-search regex

run

break main
clear main
info breakpoints

n
c

print(i)
print(argc&amp;gt;0)
print(atoi(&amp;quot;42&amp;quot;))
print(isdigit(&#39;4&#39;))
print(isdigit(&#39;a&#39;))

bt

ulimit -c unlimited
./npe
Segmentation fault (core dumped)

gdb npe core
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Vagrant</title>
      <link>https://danielkraic.github.io/2015/10/26/vagrant/</link>
      <pubDate>Mon, 26 Oct 2015 19:02:41 +0100</pubDate>
      
      <guid>https://danielkraic.github.io/2015/10/26/vagrant/</guid>
      <description>

&lt;h2 id=&#34;vagrant&#34;&gt;Vagrant&lt;/h2&gt;

&lt;h3 id=&#34;search-boxes&#34;&gt;Search boxes&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://atlas.hashicorp.com/boxes/search&#34;&gt;atlas.hashicorp.com/boxes/search&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;up-and-running&#34;&gt;Up and running&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir my-project &amp;amp;&amp;amp; cd my-project
vagrant init hashicorp/precise32
vagrant up
vagrant ssh
vagrant destroy
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;commands&#34;&gt;Commands&lt;/h3&gt;

&lt;h4 id=&#34;init&#34;&gt;Init&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# initialize Vagrant environment
vagrant init [box-name] [box-url]
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;up&#34;&gt;Up&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# create and configure guest machines
vagrant up
# specify provider (default is virtualbox)
vagrant up --provider virtualbox
# force provisioners to run
vagrant up --provision
# only run given provisioners
vagrant up --provision-with shell,chef
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;ssh&#34;&gt;SSH&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# SSH into running machine
vagrant ssh
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;ssh-config&#34;&gt;SSH config&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# output valid ssh configuration to SSH into machine
vagrant ssh-config
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;status&#34;&gt;Status&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# print machine state
vagrant status
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;global-status&#34;&gt;Global status&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# state of all active Vagrant environments
vagrant global-status
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;halt&#34;&gt;Halt&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# shut down running machine
vagrant halt
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;reload&#34;&gt;Reload&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# equivalent of running halt followed by up
vagrant reload
# force provisioners to re-run, provisioners will not run again by default
vagrant reload --provision
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;resume&#34;&gt;Resume&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# resume machine that was previously suspended
vagrant resume
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;suspend&#34;&gt;Suspend&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# suspends machine (to resume it later)
vagrant suspend
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;destroy&#34;&gt;Destroy&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# stop machine and destroy all its resources
vagrant -f destroy
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;version&#34;&gt;Version&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# output vagrant version
vagrant version
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;provision&#34;&gt;Provision&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# run any configured provisioners
vagrant provision
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;package&#34;&gt;Package&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# packages currently running VirtualBox environment into a re-usable box
vagrant package
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;box&#34;&gt;Box&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vagrant box list
vagrant box add hashicorp/precise32
vagrant box remove hashicorp/precise32
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;plugin&#34;&gt;Plugin&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;vagrant plugin install &amp;lt;name&amp;gt;
vagrant plugin list
vagrant plugin uninstall &amp;lt;name&amp;gt;
vagrant plugin update &amp;lt;name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;example&#34;&gt;Example&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;# vi: set ft=ruby :

Vagrant.configure(2) do |config|

  # rsyslog server with RELP enabled
  config.vm.define :server do |server|
    server.vm.box = &amp;quot;ubuntu/trusty64&amp;quot;

    server.vm.network &amp;quot;forwarded_port&amp;quot;, guest: 514, host: 10514
    server.vm.network &amp;quot;forwarded_port&amp;quot;, guest: 20514, host: 20514
    server.vm.network &amp;quot;forwarded_port&amp;quot;, guest: 20515, host: 20515

    server.vm.provider &amp;quot;virtualbox&amp;quot; do |vb|
      vb.customize [&amp;quot;modifyvm&amp;quot;, :id, &amp;quot;--usb&amp;quot;, &amp;quot;off&amp;quot;]
      vb.customize [&amp;quot;modifyvm&amp;quot;, :id, &amp;quot;--usbehci&amp;quot;, &amp;quot;off&amp;quot;]
    end

    server.vm.provision :ansible do |ansible|
      ansible.playbook = &amp;quot;ansible/setup-server.yml&amp;quot;
      ansible.host_key_checking = false
      ansible.verbose = &amp;quot;v&amp;quot;
    end
  end

  # rsyslog client with RELP enabled
  config.vm.define :client do |client|
    client.vm.box = &amp;quot;ubuntu/trusty64&amp;quot;

    client.vm.provider &amp;quot;virtualbox&amp;quot; do |vb|
      vb.customize [&amp;quot;modifyvm&amp;quot;, :id, &amp;quot;--usb&amp;quot;, &amp;quot;off&amp;quot;]
      vb.customize [&amp;quot;modifyvm&amp;quot;, :id, &amp;quot;--usbehci&amp;quot;, &amp;quot;off&amp;quot;]
    end

    client.vm.provision :ansible do |ansible|
      ansible.playbook = &amp;quot;ansible/setup-client.yml&amp;quot;
      ansible.host_key_checking = false
      ansible.verbose = &amp;quot;v&amp;quot;
    end
  end
e
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>https://danielkraic.github.io/2015/10/19/docker/</link>
      <pubDate>Mon, 19 Oct 2015 22:50:24 +0200</pubDate>
      
      <guid>https://danielkraic.github.io/2015/10/19/docker/</guid>
      <description>

&lt;h2 id=&#34;docker&#34;&gt;Docker&lt;/h2&gt;

&lt;h3 id=&#34;about&#34;&gt;About&lt;/h3&gt;

&lt;p&gt;Docker allows you to package an application with all of its dependencies into a standardized unit for software development.&lt;/p&gt;

&lt;p&gt;Docker containers wrap up a piece of software in a complete filesystem that contains everything it needs to run: code, runtime, system tools, system libraries – anything you can install on a server. This guarantees that it will always run the same, regardless of the environment it is running in.&lt;/p&gt;

&lt;h5 id=&#34;docker-is-lightweight&#34;&gt;Docker is lightweight&lt;/h5&gt;

&lt;p&gt;Containers running on a single machine all share the same operating system kernel so they start instantly and make more efficient use of RAM. Images are constructed from layered filesystems so they can share common files, making disk usage and image downloads much more efficient.&lt;/p&gt;

&lt;h5 id=&#34;docker-is-secure&#34;&gt;Docker is secure&lt;/h5&gt;

&lt;p&gt;Containers isolate applications from each other and the underlying infrastructure while providing an added layer of protection for the application.&lt;/p&gt;

&lt;h4 id=&#34;docker-vs-vm&#34;&gt;Docker vs VM&lt;/h4&gt;

&lt;p&gt;How is this different from virtual machines?
Containers have similar resource isolation and allocation benefits as virtual machines but a different architectural approach allows them to be much more portable and efficient.&lt;/p&gt;

&lt;h5 id=&#34;virtual-machines&#34;&gt;Virtual Machines&lt;/h5&gt;

&lt;p&gt;Each virtual machine includes the application, the necessary binaries and libraries and an entire guest operating system - all of which may be tens of GBs in size.&lt;/p&gt;

&lt;h5 id=&#34;containers&#34;&gt;Containers&lt;/h5&gt;

&lt;p&gt;Containers include the application and all of its dependencies, but share the kernel with other containers. They run as an isolated process in userspace on the host operating system. Docker uses resource isolation features of the Linux kernel such as cgroups and kernel namespaces to allow independent &amp;ldquo;containers&amp;rdquo; to run within a single Linux instance, avoiding the overhead of starting and maintaining virtual machines. They’re also not tied to any specific infrastructure – Docker containers run on any computer, on any infrastructure and in any cloud.&lt;/p&gt;

&lt;h3 id=&#34;build-ship-run&#34;&gt;Build -&amp;gt; ship -&amp;gt; run&lt;/h3&gt;

&lt;p&gt;Build – build docker container application and all of its dependencies
Ship – push container to public/private docker repository
Run – pull container from repository a run it&lt;/p&gt;

&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;

&lt;h4 id=&#34;create&#34;&gt;Create&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker create -i -t --name my_fedora fedora:22 bash
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;-i  Interactive mode (keeps the STDIN open for interaction with the container)&lt;/li&gt;
&lt;li&gt;-t  Allocates a pseudo-TTY&lt;/li&gt;
&lt;li&gt;&amp;ndash;name  Name of the container. If not specified, docker will add a hash string as a name.&lt;/li&gt;
&lt;li&gt;fedora:22  Image to be instantiated.&lt;/li&gt;
&lt;li&gt;bash  The command (process) to be run inside the container.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker start -a -i my_fedora
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;-a  Attach to the pseudo-TTY&lt;/li&gt;
&lt;li&gt;-i  Interactive mode (keeps the STDIN open for interaction with the container)&lt;/li&gt;
&lt;li&gt;&amp;ndash;name  Name of the container.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;create-start-run&#34;&gt;Create + Start = Run&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run hello-world
docker run docker/whalesay cowsay &#39;hello form docker&#39;
docker run maryatdocker/docker-whale
# Interactive
docker run -i -t --name my_fedora fedora:22 /bin/bash
# Deamon
docker run -d --name MySQL mysql:5.7 /opt/mysql/mysqld
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;expose-ports&#34;&gt;Expose ports&lt;/h4&gt;

&lt;p&gt;To expose a specific port use the -p switch. The port 80 inside the container is mapped to the outside as 8080.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -p 8080:80 --name web nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To prevent conflicts between multiple containers, the -P switch tells docker to map ports inside containers to random ports outside the container.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -d -P --name web nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;attach-data&#34;&gt;Attach data&lt;/h4&gt;

&lt;p&gt;Exposing /var/www as /usr/share/nginx/html inside the container, which is where nginx stores static content in default setting.
:ro  Read only permission&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --name web -p 80:80 -d -v /var/www:/usr/share/nginx/html:ro nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;control-containers&#34;&gt;Control containers&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker ps
docker ps -a
docker ps -a --filter &#39;exited=0&#39;
docker stop my_fedora
docker kill my_fedora
docker rm my_fedora
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;control-images&#34;&gt;Control images&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# default repository: hub.docker.com
docker search nginx
docker pull nginx
docker pull debian:squeeze
docker pull 172.16.0.1/username/image_name[:tag]
docker images
docker rmi -f nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;nginx-static-website&#34;&gt;Nginx static website&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &#39;hello from docker&#39; &amp;gt; index.html
docker run --name bal-nginx -p 8080:80 -v `pwd`:/usr/share/nginx/html:ro -d nginx
docker run --name web -p 80:80 -d -v /var/www:/usr/share/nginx/html:ro,Z nginx
lynx http://localhost:8080
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;inspect-containers&#34;&gt;Inspect containers&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker inspect CONTAINER|IMAGE
docker inspect CONTAINER | grep IPAddress
docker logs CONTAINER
docker top my_fedora
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;env&#34;&gt;ENV&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -i -t -e VAR1=val1 -e VAR2=val2 fedora:22 bash
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;foreman-demo&#34;&gt;Foreman Demo&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run -p 3333:3000 -i -t lzap/fedora-foreman-git-stable:1.3.1
# http://localhost:3333 (admin/changeme)
docker run -p 3333:3000 -i -t -entrypoint=&#39;/bin/bash&#39; lzap/fedora-foreman-git-stable:1.3.1
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;link-containers&#34;&gt;Link containers&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --name DB -e MYSQL_ROOT_PASSWORD=admin -e MYSQL_DATABASE=admin -d mysql:5.7
docker run -p 8080:80 -e WORDPRESS_DB_PASSWORD=admin -d --name WP --link DB:mysql wordpress
http://localhost:8080
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;docker-compose&#34;&gt;Docker Compose&lt;/h4&gt;

&lt;p&gt;Tool for defining and running multi-container applications with Docker:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;define Dockerfile&lt;/li&gt;
&lt;li&gt;define services that make up your app in docker-compose.yml&lt;/li&gt;
&lt;li&gt;run docker-compose up&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;cheatsheet&#34;&gt;Cheatsheet&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/wsargent/docker-cheat-sheet&#34;&gt;https://github.com/wsargent/docker-cheat-sheet&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;commands&#34;&gt;Commands&lt;/h2&gt;

&lt;h3 id=&#34;containers-1&#34;&gt;Containers&lt;/h3&gt;

&lt;h4 id=&#34;lifecycle&#34;&gt;Lifecycle&lt;/h4&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;docker create&lt;/td&gt;
&lt;td&gt;creates a container but does not start it&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;docker run&lt;/td&gt;
&lt;td&gt;creates and starts a container in one operation&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;docker stop&lt;/td&gt;
&lt;td&gt;stops it&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;docker start&lt;/td&gt;
&lt;td&gt;will start it again&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;docker restart&lt;/td&gt;
&lt;td&gt;restarts a container&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;docker rm&lt;/td&gt;
&lt;td&gt;deletes a container&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;docker kill&lt;/td&gt;
&lt;td&gt;sends a SIGKILL to a container&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;docker attach&lt;/td&gt;
&lt;td&gt;will connect to a running container&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;docker wait&lt;/td&gt;
&lt;td&gt;blocks until container stops&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&#34;info&#34;&gt;Info&lt;/h4&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;docker ps&lt;/td&gt;
&lt;td&gt;shows running containers&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;docker logs&lt;/td&gt;
&lt;td&gt;gets logs from container&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;docker inspect&lt;/td&gt;
&lt;td&gt;looks at all the info on a container (including IP address)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;docker events&lt;/td&gt;
&lt;td&gt;gets events from container&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;docker port&lt;/td&gt;
&lt;td&gt;shows public facing port of container&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;docker top&lt;/td&gt;
&lt;td&gt;shows running processes in container&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;docker stats&lt;/td&gt;
&lt;td&gt;shows containers&amp;rsquo; resource usage statistics&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;docker diff&lt;/td&gt;
&lt;td&gt;shows changed files in the container&amp;rsquo;s FS&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;images&#34;&gt;Images&lt;/h3&gt;

&lt;h4 id=&#34;lifecycle-1&#34;&gt;Lifecycle&lt;/h4&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;docker images&lt;/td&gt;
&lt;td&gt;shows all images&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;docker import&lt;/td&gt;
&lt;td&gt;creates an image from a tarball&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;docker build&lt;/td&gt;
&lt;td&gt;creates image from Dockerfile&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;docker commit&lt;/td&gt;
&lt;td&gt;creates image from a container&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;docker rmi&lt;/td&gt;
&lt;td&gt;removes an image&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;docker load&lt;/td&gt;
&lt;td&gt;loads an image from a tar archive as STDIN, including images an tags (as of 0.7)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;docker save&lt;/td&gt;
&lt;td&gt;saves an image to a tar archive stream to STDOUT with all parent layers, tags &amp;amp; versions (as of 0.7)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;info-1&#34;&gt;Info&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;docker history&lt;/td&gt;
&lt;td&gt;shows history of image&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;docker tag&lt;/td&gt;
&lt;td&gt;tags an image to a name (local or registry)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;registry-repository&#34;&gt;Registry &amp;amp; Repository&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;docker login&lt;/td&gt;
&lt;td&gt;to login to a registry&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;docker search&lt;/td&gt;
&lt;td&gt;searches registry for image&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;docker pull&lt;/td&gt;
&lt;td&gt;pulls an image from registry to local machine&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;docker push&lt;/td&gt;
&lt;td&gt;pushes an image to the registry from local machine&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Qt Creator</title>
      <link>https://danielkraic.github.io/2015/09/30/qt-creator/</link>
      <pubDate>Wed, 30 Sep 2015 19:11:33 +0200</pubDate>
      
      <guid>https://danielkraic.github.io/2015/09/30/qt-creator/</guid>
      <description>

&lt;h4 id=&#34;window&#34;&gt;Window&lt;/h4&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Shortcut&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl Shift F11&lt;/td&gt;
&lt;td&gt;full screen&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Alt 0&lt;/td&gt;
&lt;td&gt;show site bar&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Alt &amp;lt;-&lt;/td&gt;
&lt;td&gt;go back&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Ctrl Tab&lt;/td&gt;
&lt;td&gt;next window&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Ctrl Shift Tab&lt;/td&gt;
&lt;td&gt;previous window&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&#34;locate&#34;&gt;Locate&lt;/h4&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Shortcut&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl K&lt;/td&gt;
&lt;td&gt;locate&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;F4&lt;/td&gt;
&lt;td&gt;switch between source/header&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;F2&lt;/td&gt;
&lt;td&gt;follow symbol under cursor&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Shift F2&lt;/td&gt;
&lt;td&gt;switch between declaration/definition&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Ctrl Shift U&lt;/td&gt;
&lt;td&gt;find usage&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Ctrl Shift R&lt;/td&gt;
&lt;td&gt;rename symbol under cursor&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&#34;bookmarks&#34;&gt;Bookmarks&lt;/h4&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Shortcut&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl M&lt;/td&gt;
&lt;td&gt;toogle bookmark&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Ctrl .&lt;/td&gt;
&lt;td&gt;next bookmark&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Ctrl ,&lt;/td&gt;
&lt;td&gt;previous bookmark&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&#34;git&#34;&gt;Git&lt;/h4&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Shortcut&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Alt G Alt D&lt;/td&gt;
&lt;td&gt;diff current file&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Alt G Alt L&lt;/td&gt;
&lt;td&gt;log current file&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Alt G Alt B&lt;/td&gt;
&lt;td&gt;blame current file&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Alt G Alt Shift D&lt;/td&gt;
&lt;td&gt;diff project&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Alt G Alt K&lt;/td&gt;
&lt;td&gt;log project&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Alt G Alt C&lt;/td&gt;
&lt;td&gt;commit&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&#34;debug&#34;&gt;Debug&lt;/h4&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Shortcut&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;F5&lt;/td&gt;
&lt;td&gt;start debugging/continue&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;F10&lt;/td&gt;
&lt;td&gt;step over&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;F11&lt;/td&gt;
&lt;td&gt;step into&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;F9&lt;/td&gt;
&lt;td&gt;toggle breakpoint&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&#34;build&#34;&gt;Build&lt;/h4&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Shortcut&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl B&lt;/td&gt;
&lt;td&gt;build project&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Ctrl R&lt;/td&gt;
&lt;td&gt;run&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&#34;edit&#34;&gt;Edit&lt;/h4&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Shortcut&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl F&lt;/td&gt;
&lt;td&gt;find/replace&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Ctrl /&lt;/td&gt;
&lt;td&gt;toggle comment selection&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Ctrl L&lt;/td&gt;
&lt;td&gt;go to line&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Alt U&lt;/td&gt;
&lt;td&gt;uppercase&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Alt Shift U&lt;/td&gt;
&lt;td&gt;lowercase&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Ctrl &amp;lt;&lt;/td&gt;
&lt;td&gt;fold&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Ctrl &amp;gt;&lt;/td&gt;
&lt;td&gt;unfold&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>CPP random engine</title>
      <link>https://danielkraic.github.io/2015/09/24/cpp-random-engine/</link>
      <pubDate>Thu, 24 Sep 2015 10:33:23 +0200</pubDate>
      
      <guid>https://danielkraic.github.io/2015/09/24/cpp-random-engine/</guid>
      <description>

&lt;p&gt;C++11 random engine&lt;/p&gt;

&lt;h4 id=&#34;example-sleep-for-100-1000-milliseconds&#34;&gt;Example - sleep for 100-1000 milliseconds&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-cpp&#34;&gt;#include &amp;lt;random&amp;gt;
#include &amp;lt;thread&amp;gt;
#include &amp;lt;chrono&amp;gt;

std::random_device rd;
std::default_random_engine dre(rd());
std::uniform_int_distribution&amp;lt;int&amp;gt; id(100,1000);

std::this_thread::sleep_for(std::chrono::milliseconds(id(dre)));
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>CMake</title>
      <link>https://danielkraic.github.io/2015/09/24/cmake/</link>
      <pubDate>Thu, 24 Sep 2015 09:10:10 +0200</pubDate>
      
      <guid>https://danielkraic.github.io/2015/09/24/cmake/</guid>
      <description>

&lt;p&gt;CMake is tool for managing software build process using a compiler-independent method. It is designed to support directory hierarchies and applications that depend on multiple libraries.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cmake -DCMAKE_BUILD_TYPE=Debug ..
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export CC=/usr/bin/clang
export CXX=/usr/bin/clang++
cmake ..
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cmake -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ ..
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;example&#34;&gt;Example&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-cmake&#34;&gt;cmake_minimum_required(VERSION 2.6)
enable_language(CXX)
project(project-name)

# setting build output directory
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)

set(CMAKE_CXX_COMPILER &amp;quot;g++-4.8&amp;quot;)
set(CMAKE_CXX_FLAGS &amp;quot;${CMAKE_CXX_FLAGS} -O2 -Wall -Werror -Weffc++ -fopenmp -std=c++11&amp;quot;)

include_directories(&amp;quot;/usr/include/customlib&amp;quot;)

FILE(GLOB WEB_BENCHMARK_SRCS *.cpp)
add_executable(bin-name ${PROJECT_SRCS})
include_directories(${CMAKE_SOURCE_DIR})

target_link_libraries(myapp test)

include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG(&amp;quot;-std=c++11&amp;quot; COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG(&amp;quot;-std=c++0x&amp;quot; COMPILER_SUPPORTS_CXX0X)
if(COMPILER_SUPPORTS_CXX11)
    set(CMAKE_CXX_FLAGS &amp;quot;${CMAKE_CXX_FLAGS} -std=c++11&amp;quot;)
elseif(COMPILER_SUPPORTS_CXX0X)
    set(CMAKE_CXX_FLAGS &amp;quot;${CMAKE_CXX_FLAGS} -std=c++0x&amp;quot;)
else()
        message(STATUS &amp;quot;The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.&amp;quot;)
endif()
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Ansible</title>
      <link>https://danielkraic.github.io/2015/09/16/ansible/</link>
      <pubDate>Wed, 16 Sep 2015 20:54:52 +0200</pubDate>
      
      <guid>https://danielkraic.github.io/2015/09/16/ansible/</guid>
      <description>

&lt;p&gt;Ansible is a free software platform for configuring and managing computers. It combines multi-node software deployment, ad hoc task execution, and configuration management. It manages nodes over SSH or PowerShell and requires Python (2.4 or later) to be installed on them. The system uses YAML to express reusable descriptions of systems.&lt;/p&gt;

&lt;h3 id=&#34;installation&#34;&gt;Installation&lt;/h3&gt;

&lt;h4 id=&#34;install-from-ppa&#34;&gt;Install from PPA&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install software-properties-common
sudo apt-add-repository ppa:ansible/ansible
sudo apt-get update
sudo apt-get install ansible
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;install-with-pip&#34;&gt;Install with pip&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo pip install ansible
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;configuration&#34;&gt;Configuration&lt;/h3&gt;

&lt;h4 id=&#34;add-localhost-to-hosts-file&#34;&gt;Add localhost to hosts file&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;echo &amp;quot;localhost ansible_connection=local&amp;quot; &amp;gt; ~/ansible_hosts
export ANSIBLE_INVENTORY=~/ansible_hosts
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;setup-ssh-agent&#34;&gt;Setup SSH-agent&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh-agent bash
ssh-add ~/.ssh/id_rsa
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;inventory-http-docs-ansible-com-ansible-intro-inventory-html&#34;&gt;&lt;a href=&#34;http://docs.ansible.com/ansible/intro_inventory.html&#34;&gt;Inventory&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;[webservers]
www[01:50].example.com

[databases]
db-[a:f].example.com

[targets]
localhost              ansible_connection=local
other1.example.com     ansible_connection=ssh        ansible_ssh_user=mpdehaan
other2.example.com     ansible_connection=ssh        ansible_ssh_user=mdehaan
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ad-hoc-commands-http-docs-ansible-com-ansible-intro-adhoc-html&#34;&gt;&lt;a href=&#34;http://docs.ansible.com/ansible/intro_adhoc.html&#34;&gt;Ad-Hoc Commands&lt;/a&gt;&lt;/h3&gt;

&lt;h4 id=&#34;patterns-http-docs-ansible-com-ansible-intro-patterns-html&#34;&gt;&lt;a href=&#34;http://docs.ansible.com/ansible/intro_patterns.html&#34;&gt;Patterns&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ansible &amp;lt;pattern_goes_here&amp;gt; -m &amp;lt;module_name&amp;gt; -a &amp;lt;arguments&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;ping-hosts&#34;&gt;Ping hosts&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# ping
ansible all -m ping
# ask ssh password
ansible all -m ping --ask-pass
# as bruce
$ ansible all -m ping -u bruce
# as bruce, sudoing to root
$ ansible all -m ping -u bruce --sudo
# as bruce, sudoing to batman
$ ansible all -m ping -u bruce --sudo --sudo-user batman
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;run-command&#34;&gt;Run command&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ansible localhost -a &amp;quot;/bin/echo hello&amp;quot;
ansible localhost -a &amp;quot;uname -a&amp;quot;
ansible localhost -m shell -a &#39;echo $TERM&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;run-command-in-parallel&#34;&gt;Run command in parallel&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ansible atlanta -a &amp;quot;/sbin/reboot&amp;quot; -f 10
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;run-as-other-user-with-sudo&#34;&gt;Run as other user with sudo&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ansible atlanta -a &amp;quot;/usr/bin/foo&amp;quot; -u username --sudo [--ask-sudo-pass]
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;file-http-docs-ansible-com-ansible-file-module-html&#34;&gt;&lt;a href=&#34;http://docs.ansible.com/ansible/file_module.html&#34;&gt;File&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# create file and set permissions
ansible webservers -m file -a &amp;quot;dest=/srv/foo/b.txt mode=600 owner=mdehaan group=mdehaan&amp;quot;
# create directory
ansible webservers -m file -a &amp;quot;dest=/path/to/c mode=755 owner=mdehaan group=mdehaan state=directory&amp;quot;
# delete file
ansible webservers -m file -a &amp;quot;dest=/path/to/c state=absent&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;copy-http-docs-ansible-com-ansible-copy-module-html&#34;&gt;&lt;a href=&#34;http://docs.ansible.com/ansible/copy_module.html&#34;&gt;Copy&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# copy file
ansible atlanta -m copy -a &amp;quot;src=/etc/hosts dest=/tmp/hosts&amp;quot;
ansible atlanta -m copy -a &amp;quot;src=/srv/myfiles/foo.conf dest=/etc/foo.conf owner=foo group=foo mode=0644 backup=yes&amp;quot;
ansible atlanta -m copy -a &amp;quot;src=/mine/sudoers dest=/etc/sudoers validate=&#39;visudo -cf %s&#39;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;fetch-http-docs-ansible-com-ansible-fetch-module-html&#34;&gt;&lt;a href=&#34;http://docs.ansible.com/ansible/fetch_module.html&#34;&gt;Fetch&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# fetch file from remote node
ansible atlanta -m fetch -a &amp;quot;src=/tmp/somefile dest=/tmp/fetched&amp;quot;
ansible atlanta -m fetch -a &amp;quot;src=/tmp/somefile dest=/tmp/prefix-{{ ansible_hostname }} flat=yes&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;service-http-docs-ansible-com-ansible-service-module-html&#34;&gt;&lt;a href=&#34;http://docs.ansible.com/ansible/service_module.html&#34;&gt;Service&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ansible webservers -m service -a &amp;quot;name=httpd state=started&amp;quot;
ansible webservers -m service -a &amp;quot;name=httpd state=stopped&amp;quot;
ansible webservers -m service -a &amp;quot;name=httpd state=restarted&amp;quot;
ansible webservers -m service -a &amp;quot;name=httpd enabled=yes&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;apt-http-docs-ansible-com-ansible-apt-module-html&#34;&gt;&lt;a href=&#34;http://docs.ansible.com/ansible/apt_module.html&#34;&gt;APT&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# update repositories cache and install package
ansible local -m apt -a &amp;quot;name=foo update_cache=yes&amp;quot;
# install latest version of package
ansible local -m apt -a &amp;quot;name=foo state=latest&amp;quot;
# install version &#39;1.00&#39; of package &amp;quot;foo&amp;quot;
ansible local -m apt -a &amp;quot;name=foo=1.00 state=present&amp;quot;
# remove package
ansible local -m apt -a &amp;quot;name=foo state=absent&amp;quot;
# equivalent of &amp;quot;apt-get update&amp;quot;
ansible local -m apt -a &amp;quot;update_cache=yes&amp;quot;
# install local deb file
ansible local -m apt -a &amp;quot;deb=/tmp/mypackage.deb&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;apt-repository-http-docs-ansible-com-ansible-apt-repository-module-html&#34;&gt;&lt;a href=&#34;http://docs.ansible.com/ansible/apt_repository_module.html&#34;&gt;APT repository&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ansible local -m apt_repository -a &amp;quot;repo=&#39;deb http://archive.canonical.com/ubuntu hardy partner&#39; state=present&amp;quot;
ansible local -m apt_repository -a &amp;quot;repo=&#39;deb http://archive.canonical.com/ubuntu hardy partner&#39; state=absent&amp;quot;
ansible local -m apt_repository -a &amp;quot;repo=&#39;ppa:nginx/stable&#39;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;shell-http-docs-ansible-com-ansible-shell-module-html&#34;&gt;&lt;a href=&#34;http://docs.ansible.com/ansible/shell_module.html&#34;&gt;Shell&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# execute the command in remote shell
ansible webserver -m shell -a &amp;quot;somescript.sh &amp;gt;&amp;gt; somelog.txt&amp;quot;
# change the working directory to somedir/ before executing the command.
ansible webserver -m shell -a &amp;quot;somescript.sh &amp;gt;&amp;gt; somelog.txt chdir=somedir/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;ini-http-docs-ansible-com-ansible-ini-file-module-html&#34;&gt;&lt;a href=&#34;http://docs.ansible.com/ansible/ini_file_module.html&#34;&gt;INI&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ansible webserver -m ini_file -a &amp;quot;dest=/etc/conf section=drinks option=fav value=lemonade mode=0600 backup=yes&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;sysctl-http-docs-ansible-com-ansible-sysctl-module-html&#34;&gt;&lt;a href=&#34;http://docs.ansible.com/ansible/sysctl_module.html&#34;&gt;Sysctl&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# set vm.swappiness to 5 in /etc/sysctl.conf
ansible webserver -m sysctl &#39;name=vm.swappiness value=5 state=present&#39;
# remove kernel.panic entry from /etc/sysctl.conf
ansible webserver -m sysctl &#39;name=kernel.panic state=absent sysctl_file=/etc/sysctl.conf&#39;
# set kernel.panic to 3 in /tmp/test_sysctl.conf
ansible webserver -m sysctl &#39;name=kernel.panic value=3 sysctl_file=/tmp/test_sysctl.conf reload=no&#39;
# set ip forwarding on in /proc and do not reload the sysctl file
ansible webserver -m sysctl &#39;name=&amp;quot;net.ipv4.ip_forward&amp;quot; value=1 sysctl_set=yes&#39;
# set ip forwarding on in /proc and in the sysctl file and reload if necessary
ansible webserver -m sysctl &#39;name=&amp;quot;net.ipv4.ip_forward&amp;quot; value=1 sysctl_set=yes state=present reload=yes&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;script-http-docs-ansible-com-ansible-script-module-html-runs-a-local-script-on-a-remote-node-after-transferring-it&#34;&gt;&lt;a href=&#34;http://docs.ansible.com/ansible/script_module.html&#34;&gt;Script&lt;/a&gt; - Runs a local script on a remote node after transferring it&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ansible webserver -m script -a &amp;quot;/some/local/script.sh --some-arguments 1234&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;git-http-docs-ansible-com-ansible-git-module-html&#34;&gt;&lt;a href=&#34;http://docs.ansible.com/ansible/git_module.html&#34;&gt;Git&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ansible webservers -m git -a &amp;quot;repo=git://foo.example.org/repo.git dest=/srv/myapp version=HEAD&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;assemble-http-docs-ansible-com-ansible-assemble-module-html-assembles-a-configuration-file-from-fragments&#34;&gt;&lt;a href=&#34;http://docs.ansible.com/ansible/assemble_module.html&#34;&gt;Assemble&lt;/a&gt; - Assembles a configuration file from fragments&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ansible webserver -m assemble -a &amp;quot;src=/etc/someapp/fragments dest=/etc/someapp/someapp.conf&amp;quot;
# when a delimiter is specified, it will be inserted in between each fragment
ansible webserver -m assemble -a &amp;quot;src=/etc/someapp/fragments dest=/etc/someapp/someapp.conf delimiter=&#39;### START FRAGMENT ###&#39;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;lineinfile-http-docs-ansible-com-ansible-lineinfile-module-html&#34;&gt;&lt;a href=&#34;http://docs.ansible.com/ansible/lineinfile_module.html&#34;&gt;LineInFile&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ansible webserver -m lineinfile -a &#39;dest=/etc/sudoers state=absent regexp=&amp;quot;^%wheel&amp;quot;&#39;
ansible webserver -m lineinfile -a &#39;dest=/etc/httpd/conf/httpd.conf regexp=&amp;quot;^Listen &amp;quot; insertafter=&amp;quot;^#Listen &amp;quot; line=&amp;quot;Listen 8080&amp;quot;&#39;
ansible webserver -m lineinfile -a &#39;dest=/etc/services regexp=&amp;quot;^# port for http&amp;quot; insertbefore=&amp;quot;^www.*80/tcp&amp;quot; line=&amp;quot;# port for http by default&amp;quot;&#39;
ansible webserver -m lineinfile -a &#39;dest=/tmp/testfile line=&amp;quot;192.168.1.99 foo.lab.net foo&amp;quot;&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;playbooks-http-docs-ansible-com-ansible-playbooks-html&#34;&gt;&lt;a href=&#34;http://docs.ansible.com/ansible/playbooks.html&#34;&gt;Playbooks&lt;/a&gt;&lt;/h3&gt;

&lt;h4 id=&#34;examples&#34;&gt;Examples&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---
- hosts: webservers
  vars:
    http_port: 80
    max_clients: 200
  remote_user: root
  tasks:
  - name: ensure apache is at the latest version
    yum: pkg=httpd state=latest
  - name: write the apache config file
    template: src=/srv/httpd.j2 dest=/etc/httpd.conf
    notify:
    - restart apache
  - name: ensure apache is running (and enable it at boot)
    service: name=httpd state=started enabled=yes
  handlers:
    - name: restart apache
      service: name=httpd state=restarted
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---
- hosts: webservers
  vars:
    http_port: 80
    max_clients: 200
  remote_user: root
  tasks:
  - name: ensure apache is at the latest version
    yum:
      pkg: httpd
      state: latest
  - name: write the apache config file
    template:
      src: /srv/httpd.j2
      dest: /etc/httpd.conf
    notify:
    - restart apache
  - name: ensure apache is running
    service:
      name: httpd
      state: started
  handlers:
    - name: restart apache
      service:
        name: httpd
        state: restarted
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---
- hosts: webservers
  remote_user: root

  tasks:
  - name: ensure apache is at the latest version
    yum: pkg=httpd state=latest
  - name: write the apache config file
    template: src=/srv/httpd.j2 dest=/etc/httpd.conf

- hosts: databases
  remote_user: root

  tasks:
  - name: ensure postgresql is at the latest version
    yum: name=postgresql state=latest
  - name: ensure that postgresql is started
    service: name=postgresql state=running
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Golang installation with GVM</title>
      <link>https://danielkraic.github.io/2015/09/14/golang-installation-with-gvm/</link>
      <pubDate>Mon, 14 Sep 2015 20:06:13 +0200</pubDate>
      
      <guid>https://danielkraic.github.io/2015/09/14/golang-installation-with-gvm/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://github.com/moovweb/gvm&#34;&gt;GVM&lt;/a&gt; is version manager for &lt;a href=&#34;https://golang.org/&#34;&gt;golang&lt;/a&gt;. GVM provides an interface to install and manage multiple &lt;em&gt;golang&lt;/em&gt; versions.&lt;/p&gt;

&lt;h3 id=&#34;install-gvm&#34;&gt;Install GVM&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash &amp;lt; &amp;lt;(curl -s -S -L https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;list-available-versions-of-golang&#34;&gt;List available versions of golang&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gvm listall
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-version-v1-4&#34;&gt;Install version v1.4&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gvm install go1.4
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;use-v1-4-as-default&#34;&gt;Use v1.4 (as default)&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;gvm use go1.4 --default
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Build blog with Hugo</title>
      <link>https://danielkraic.github.io/2015/09/14/build-blog-with-hugo/</link>
      <pubDate>Mon, 14 Sep 2015 19:54:07 +0200</pubDate>
      
      <guid>https://danielkraic.github.io/2015/09/14/build-blog-with-hugo/</guid>
      <description>

&lt;p&gt;This blog is created with &lt;a href=&#34;http://www.gohugo.io&#34;&gt;Hugo&lt;/a&gt; - static website engine written in &lt;a href=&#34;https://golang.org/&#34;&gt;golang&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;requirements&#34;&gt;Requirements&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;li&gt;Go 1.3+ (&lt;a href=&#34;https://danielkraic.github.io/post/gvm&#34;&gt;install golang with gvm&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;installation&#34;&gt;Installation&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go get -v github.com/spf13/hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create-new-site&#34;&gt;Create new site&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo new site /path/to/site &amp;amp;&amp;amp; cd /path/to/site
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create-new-post&#34;&gt;Create new post&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo new post/first-post.md
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-slim-theme&#34;&gt;Install slim theme&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/zhe/hugo-theme-slim.git themes/slim
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;run-local-hugo-server&#34;&gt;Run local hugo server&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo server --buildDrafts -w
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;build-site&#34;&gt;Build site&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>